name: Deploy to Oracle

on:
  workflow_dispatch:
  push:
    tags:
      - v**
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    env:
      name: ghcr.io/yevhennsorganization/pizza-backend
      tag: ${GITHUB_REF_NAME}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
           
      - name: Build docker image
        run: |
          docker build . -t ${{ env.name }}:${{ env.tag }}
          docker tag ${{ env.name }}:${{ env.tag }} ${{ env.name }}:latest

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        
      - name: Push image
        run: |
          docker push ${{ env.name }}:latest
          docker push ${{ env.name }}:${{ env.tag }}

      - name: Delete old packages
        uses: actions/delete-package-versions@v4
        with: 
          package-name: 'pizza-backend'
          package-type: 'container'
          min-versions-to-keep: 1
          ignore-versions: 'latest'

  deploy:
    if: jobs.build.result == success
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    env:
      name: ghcr.io/yevhennsorganization/pizza-backend
      key: "ssh_key"
      tag: ${GITHUB_REF_NAME}
      host: ${{ secrets.ORACLE_USER }}"@"${{ secrets.ORACLE_IP }}
      ghcr_user: $(echo ${{ github.repository_owner }} | tr '[A-Z]' '[a-z]')
      
    steps:
      - name: SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" > ${key}
          sudo chmod 400 ${key}

      - name: Start image
        run: |
          ssh -i ${key} -o "StrictHostKeyChecking no" ${{ env.host }} ' \
          echo '${{ secrets.GITHUB_TOKEN }}' | docker login ghcr.io -u '${{ env.ghcr_user }}' --password-stdin; \
          docker pull '${{ env.name }}':latest && \
          docker compose -f ~/pizza-backend/docker-compose.yaml up -d; \
          docker rmi $(sudo docker images -q) || true'
